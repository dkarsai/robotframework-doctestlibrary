# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches:    
      - '**'
  pull_request:
    branches:    
      - '**'
jobs:
  build:
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick tesseract-ocr ghostscript libdmtx0b allure
        export release_name=gs952
        export archive_name=ghostpcl-9.52-linux-x86_64
        wget https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/${release_name}/${archive_name}.tgz
        tar -xvzf ${archive_name}.tgz
        chmod +x ${archive_name}/gpcl6*
        cp ${archive_name}/gpcl6* ${archive_name}/pcl6
        sudo cp ${archive_name}/* /usr/bin
        sudo cp policy.xml /etc/ImageMagick-6/
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      continue-on-error: true
      run: |
        pytest
    - name: Test with robotframework
      continue-on-error: true
      run: |
        mkdir -p reports/screenshots
        mkdir -p allure-results
        mkdir -p reports/allure-reports
        robot --pythonpath ./:DocTest --outputdir reports atest/Compare.robot atest/PdfContent.robot
#    - name: Create Keyword Documentation
#      continue-on-error: true
#      run: |
#        libdoc --pythonpath ./:DocTest DocTest/VisualTest.py docs/VisualTest.html
#        libdoc --pythonpath ./:DocTest DocTest/PdfTest.py docs/PdfTestTest.html
#        libdoc --pythonpath ./:DocTest DocTest/PrintJobTests.py docs/PrintJobTest.html
#    - name: Create Allure report
#      continue-on-error: true
#      run: |
#        allure generate $PWD/allure-results --clean -o reports/allure-reports
#    - name: Deploy ðŸš€
#      uses: JamesIves/github-pages-deploy-action@4.1.5
#      with:
#        branch: main # The branch the action should deploy to.
#        folder: docs # The folder the action should deploy.
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: robotframework-log
        path: |
          reports/
#          $PWD/allure-report
        retention-days: 5
